import torch, random, numpy
from torch.utils.data import Dataset, TensorDataset, Subset
import pandas as pd
from sklearn.preprocessing import StandardScaler

def TitanicDataset():
    raw_data = pd.read_csv('../dataset/Titanic/train.csv')
    raw_data = raw_data.drop(['Name', 'PassengerId'], axis=1)

    category_feature = ['Sex','Ticket','Cabin','Embarked']
    category_feature_map = [{} for cat in category_feature]

    def encode(encoder, x):
        len_encoder = len(encoder)
        try:
            id = encoder[x]
        except KeyError:
            id = len_encoder
        return id

    for i, cat in enumerate(category_feature):
        category_feature_map[i] = {l: id for id, l in enumerate(raw_data.loc[:, cat].astype(str).unique())}
        raw_data[cat] = raw_data[cat].astype(str).apply(lambda x: encode(category_feature_map[i], x))

    numerical_feature = list(set(raw_data.columns) - set(["Survived"]))
    raw_data[numerical_feature] = raw_data[numerical_feature].fillna(0)

    scaler = StandardScaler()
    raw_data[numerical_feature] = scaler.fit_transform(raw_data[numerical_feature])

    x = torch.from_numpy(raw_data.drop(["Survived"], axis=1).values).float()
    y = torch.from_numpy(raw_data["Survived"].values)

    dataset = TensorDataset(x,y)

    train_indices = [331, 733, 382, 704, 813, 118, 536, 361, 29, 55, 865, 595, 239, 721, 81, 259, 486, 716, 800, 781, 542, 326, 534, 535, 483, 762, 533, 713, 390, 495, 482, 377, 365, 412, 468, 409, 7, 580, 155, 880, 425, 101, 199, 424, 298, 884, 247, 478, 305, 316, 2, 405, 742, 260, 367, 158, 554, 829, 677, 380, 626, 302, 432, 522, 404, 843, 355, 464, 753, 212, 449, 79, 148, 428, 60, 660, 804, 588, 765, 265, 133, 708, 544, 346, 821, 633, 456, 500, 430, 445, 650, 172, 450, 314, 332, 801, 90, 834, 181, 581, 795, 69, 131, 334, 597, 135, 164, 28, 783, 193, 869, 715, 525, 381, 140, 173, 6, 718, 685, 73, 882, 328, 453, 145, 234, 220, 370, 811, 132, 694, 864, 185, 41, 547, 108, 603, 56, 394, 706, 549, 24, 351, 429, 434, 51, 526, 816, 569, 264, 436, 613, 693, 352, 18, 666, 582, 83, 61, 272, 285, 695, 746, 12, 182, 444, 552, 223, 513, 628, 587, 692, 523, 664, 176, 841, 678, 163, 248, 570, 787, 74, 113, 635, 501, 104, 114, 368, 92, 497, 89, 336, 879, 817, 828, 543, 548, 94, 11, 431, 43, 42, 329, 167, 779, 537, 735, 499, 178, 583, 784, 593, 177, 644, 710, 615, 383, 257, 734, 335, 551, 15, 3, 411, 256, 451, 473, 697, 393, 222, 506, 567, 420, 324, 530, 9, 249, 22, 356, 221, 601, 766, 874, 528, 340, 743, 519, 203, 237, 93, 730, 440, 559, 284, 184, 791, 487, 153, 75, 656, 631, 277, 68, 825, 188, 271, 662, 711, 236, 88, 757, 117, 125, 731, 289, 238, 0, 881, 467, 827, 395, 531, 126, 278, 691, 116, 228, 622, 655, 598, 516, 274, 318, 606, 144, 634, 558, 809, 745, 369, 268, 623, 307, 423, 310, 354, 46, 349, 371, 479, 576, 261, 195, 890, 744, 107, 866, 59, 658, 263, 568, 100, 443, 490, 687, 799, 640, 169, 179, 304, 341, 57, 858, 149, 124, 703, 50, 353, 823, 142, 470, 399, 575, 320, 19, 792, 707, 723, 407, 557, 38, 175, 245, 740, 602, 768, 764, 154, 287, 750, 17, 127, 322, 255, 770, 856, 190, 115, 737, 180, 301, 679, 638, 649, 616, 596, 517, 875, 45, 807, 157, 665, 171, 16, 511, 48, 862, 749, 515, 617, 480, 283, 589, 225, 26, 848, 437, 844, 364, 229, 37, 857, 374, 469, 859, 758, 651, 194, 760, 868, 503, 861, 741, 579, 888, 162, 630, 152, 684, 629, 675, 111, 226, 618, 103, 421, 419, 586, 119, 53, 151, 403, 839, 207, 752, 717, 8, 722, 36, 452, 253, 303, 667, 571, 636, 714, 262, 610, 297, 414, 150, 705, 789, 550, 488, 147, 146, 836, 826, 870, 348, 463, 325, 186, 123, 759, 608, 143, 851, 197, 609, 279, 293, 400, 122, 183, 202, 438, 246, 415, 788, 129, 637, 402, 794, 689, 810, 219, 641, 812, 672, 815, 624, 855, 680, 386, 863, 509, 267, 732, 441, 496, 112, 232, 774, 607, 671, 373, 872, 751, 233, 806, 676, 317, 648, 410, 798, 358, 258, 627, 632, 282, 376, 384, 224, 846, 728, 472, 347, 505, 639, 878, 824, 803, 619, 761, 645, 754, 556, 850, 577, 85, 242, 698, 159, 524, 35, 540, 170, 654, 786, 755, 838, 95, 563, 240, 574, 690, 460, 553, 780, 206, 392, 397, 756, 217, 4, 642, 797, 612, 738, 546, 725, 683, 98, 727, 573, 406, 502, 47, 32, 200, 134, 27, 847, 230, 489, 378, 288, 418, 674, 391, 592, 498, 138, 62, 471, 647, 128, 867, 520, 64, 14, 156, 40, 492, 379, 187, 763, 216, 52, 337, 748, 719, 724, 295, 701, 251, 726, 461, 455, 887, 269, 201, 161, 555, 729, 401, 702, 476, 771, 105, 565, 389, 1, 832, 561, 80, 205, 34, 775, 508, 427, 454, 366, 91, 339, 564, 345, 776, 241, 13, 315, 600, 387, 273, 166, 883, 646, 818, 484, 873, 504, 831, 243, 566, 562, 686, 189, 782, 699, 475, 681, 510, 58, 474, 560, 747, 252, 21, 313, 459, 160, 276, 191, 385, 805, 413, 491, 343, 769, 308, 661, 130, 663, 871, 99, 372, 87, 458, 330, 214, 466, 121, 614, 20, 700, 71, 106, 270, 860, 435, 102]
    test_indices = [709, 439, 840, 720, 39, 290, 300, 333, 208, 136, 137, 696, 485, 244, 344, 853, 621, 653, 886, 110, 294, 447, 192, 682, 538, 819, 30, 673, 63, 396, 877, 141, 793, 235, 204, 620, 23, 198, 842, 739, 120, 477, 837, 790, 362, 86, 67, 350, 210, 659, 448, 820, 360, 802, 280, 585, 70, 299, 211, 44, 408, 446, 426, 168, 196, 772, 72, 422, 532, 591, 312, 311, 889, 835, 833, 605, 767, 539, 357, 254, 266, 66, 319, 778, 174, 493, 215, 309, 822, 250, 165, 541, 625, 388, 76, 281, 712, 338, 327, 321, 545, 590, 291, 465, 814, 442, 670, 462, 286, 209, 669, 227, 849, 512, 527, 876, 96, 292, 323, 736, 529, 218, 275, 78, 785, 604, 796, 139, 578, 494, 359, 65, 481, 777, 599, 830, 306, 231, 845, 49, 652, 854, 342, 594, 885, 416, 213, 33, 31, 668, 584, 514, 688, 109, 77, 611, 643, 82, 518, 657, 296, 507, 808, 375, 5, 54, 398, 457, 521, 363, 97, 417, 572, 852, 433, 773, 25, 84, 10]

    train_dataset = Subset(dataset, train_indices)
    test_dataset = Subset(dataset, test_indices)

    return train_dataset, test_dataset